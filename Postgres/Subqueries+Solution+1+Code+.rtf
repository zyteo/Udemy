{\rtf1\ansi\ansicpg1252\cocoartf1504\cocoasubrtf830
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 -- 1. Select the first and last names of all the actors older than Marlon Brando. \
\
SELECT first_name, last_name FROM actors \
WHERE date_of_birth < \
(SELECT date_of_birth FROM actors\
WHERE first_name = 'Marlon'\
AND last_name = 'Brando');\
\
-- 2. Select the movie names of all movies that have domestic takings above 300 million. \
\
SELECT movie_name FROM movies\
WHERE movie_id IN\
(SELECT movie_id FROM movie_revenues\
WHERE domestic_takings > 300.0);\
\
-- 3. Return the shortest and longest movie length for movies with an above average \
--    domestic takings.\
\
SELECT MIN(movie_length), MAX(movie_length) FROM movies \
WHERE movie_id IN\
(SELECT movie_id FROM movie_revenues \
WHERE domestic_takings > \
(SELECT AVG(domestic_takings) FROM movie_revenues));}